name: testing

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]
jobs:
    test:
        name: PetShop (PHP ${{ matrix.php-versions }})
        runs-on: ubuntu-latest
        env:
            APP_NAME: "PetShop API"
            DB_DATABASE: petshop
            DB_USERNAME: root
            DB_PASSWORD: password
            BROADCAST_DRIVER: log
            CACHE_DRIVER: redis
            QUEUE_CONNECTION: redis
            SESSION_DRIVER: redis
            JWT_PRIVATE_KEY: ${{ github.workspace }}/jwt_keys/test_private_001.pem
            JWT_PUBLIC_KEY: ${{ github.workspace }}/jwt_keys/test_public_01.pem
            JWT_PASSPHRASE: petshop

            # Docs: https://docs.github.com/en/actions/using-containerized-services
        services:
            mysql:
                image: mysql:latest
                env:
                    MYSQL_ALLOW_EMPTY_PASSWORD: false
                    MYSQL_ROOT_PASSWORD: password
                    MYSQL_DATABASE: petshop
                ports:
                    - 3306/tcp
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

            redis:
                image: redis
                ports:
                    - 6379/tcp
                options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
        strategy:
            fail-fast: false
            matrix:
                php-versions: [ '8.2' ]
        steps:
            -   name: Checkout
                uses: actions/checkout@v3
            # Docs: https://github.com/shivammathur/setup-php
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-versions }}
                  extensions: mbstring, dom, fileinfo, mysql
                  coverage: xdebug
            - name: Get composer cache directory
              id: composer-cache
              run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            - name: Cache composer dependencies
              uses: actions/cache@v3
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  # Use composer.json for key, if composer.lock is not committed.
                  # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Install Composer dependencies
              run: composer install --no-progress --prefer-dist --optimize-autoloader

            - name: Prepare the application
              run: |
                  php -r "file_exists('.env') || copy('.env.example', '.env');"
                  php artisan key:generate
                  pwd

            - name: Clear Config
              run: php artisan config:clear

            -   name: Directory Permissions
                run: chmod -R 777 storage bootstrap/cache

            - name: Run Migrations
              run: php artisan migrate -v
              env:
                  DB_PORT: ${{ job.services.mysql.ports['3306'] }}
                  REDIS_PORT: ${{ job.services.redis.ports['6379'] }}

            - name: Test with Pest
              run: php artisan test --coverage-text
              env:
                  DB_PORT: ${{ job.services.mysql.ports['3306'] }}
                  REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
